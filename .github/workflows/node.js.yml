name: Build and Release

on:
  release:
    types: [published] # Triggers when a new release is published

env:
  OUTPUT_FOLDER: './artifact'

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest

    strategy:
      matrix:
        os: [windows-latest] # Optional if you want to test on both OSs
        w3c_mode: [true, false]

    env:
      W3C_MODE_ENABLED: ${{ matrix.w3c_mode }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Generate version suffix (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          if [[ "$W3C_MODE_ENABLED" == "true" ]]; then
            SUFFIX="_w3c"
          else
            SUFFIX=""
          fi
          echo "W3C_SUFFIX=${SUFFIX}" >> $GITHUB_ENV
          echo "RELEASE_FILENAME=Risk_Europe_${TAG_NAME}${SUFFIX}.w3x" >> $GITHUB_ENV

      - name: Generate version suffix (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $TAG_NAME = $env:GITHUB_REF -replace 'refs/tags/', ''
          echo "TAG_NAME=$TAG_NAME" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          if ($env:W3C_MODE_ENABLED -eq "true") {
            $SUFFIX = "_w3c"
          } else {
            $SUFFIX = ""
          }
          echo "W3C_SUFFIX=$SUFFIX" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RELEASE_FILENAME=Risk_Europe_${TAG_NAME}${SUFFIX}.w3x" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install dependencies
        run: npm install

      - name: Build the application
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
          W3C_MODE_ENABLED: ${{ env.W3C_MODE_ENABLED }}
        run: npm run build

      - name: Upload packaged app using GitHub CLI
        run: |
          gh release upload "${{ github.event.release.tag_name }}" "${{ env.OUTPUT_FOLDER }}/${{ env.RELEASE_FILENAME }}" --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ env.TAG_NAME }}
