name: Build and Release

on:
  release:
    types: [published] # Triggers when a new release is published

env:
  OUTPUT_FOLDER: './artifact'

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Generate version suffix
        id: version
        run: |
          # Extract version suffix from the tag
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Build the application
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
        run: npm run build

      - name: Package the application
        run: |
          # Include version suffix in the package name
          PACKAGE_NAME="my-app-${TAG_NAME}.tgz"
          npm pack
          mv *.tgz $PACKAGE_NAME
        env:
          TAG_NAME: ${{ env.TAG_NAME }}

      - name: Upload artifact to release
        uses: ncipollo/release-action@v1
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
        with:
          tag: ${{ env.TAG_NAME }}
          name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          artifacts: ${{env.OUTPUT_FOLDER}}/Risk Europe ${{ env.TAG_NAME }}.w3x
          replacesArtifacts: true
          generateReleaseNotes: true
          allowUpdates: true
      - name: Upload packaged app to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{env.OUTPUT_FOLDER}}/Risk Europe ${{ env.TAG_NAME }}.w3x
          asset_name: Risk Europe ${{ env.TAG_NAME }}.w3x
          asset_content_type: application/octet-stream
